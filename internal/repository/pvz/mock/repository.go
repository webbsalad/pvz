// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/pvz/repository.go

// Package mock_pvz is a generated GoMock package.
package mock_pvz

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/webbsalad/pvz/internal/model"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreatePVZ mocks base method.
func (m *MockRepository) CreatePVZ(ctx context.Context, pvz model.PVZ) (model.PVZ, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePVZ", ctx, pvz)
	ret0, _ := ret[0].(model.PVZ)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePVZ indicates an expected call of CreatePVZ.
func (mr *MockRepositoryMockRecorder) CreatePVZ(ctx, pvz interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePVZ", reflect.TypeOf((*MockRepository)(nil).CreatePVZ), ctx, pvz)
}

// GetPVZsByParams mocks base method.
func (m *MockRepository) GetPVZsByParams(ctx context.Context, pvzFilter model.PVZFilter) ([]model.PVZ, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPVZsByParams", ctx, pvzFilter)
	ret0, _ := ret[0].([]model.PVZ)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPVZsByParams indicates an expected call of GetPVZsByParams.
func (mr *MockRepositoryMockRecorder) GetPVZsByParams(ctx, pvzFilter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPVZsByParams", reflect.TypeOf((*MockRepository)(nil).GetPVZsByParams), ctx, pvzFilter)
}
